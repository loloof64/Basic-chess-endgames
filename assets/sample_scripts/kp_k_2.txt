# player king constraints

// player's king must be on its first rank
isRightRank := rank == numIf playerHasWhite then Rank1 else Rank8;
return isRightRank;

@@@@@@

# computer king constraints

// computer king must be on its fifth's rank
isRightRank := rank == numIf playerHasWhite then Rank4 else Rank5;
return isRightRank;

@@@@@@

# kings mutual constraints

// kings must be close in terms of columns
kingsAreOnNeighboursColumns := abs(playerKingFile - computerKingFile) <= 1;
return kingsAreOnNeighboursColumns;

@@@@@@

# other pieces counts

computer pawn : 1

@@@@@@

# other pieces global constraints

[computer pawn]

isRightRank := rank == computerKingRank;
isRightFile := file == playerKingFile;

return isRightFile and isRightRank;

@@@@@@

# goal

draw