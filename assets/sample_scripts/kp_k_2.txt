# player king constraints

-- player's king must be on its first rank
if playerHasWhite then expectedRank = Rank1 else expectedRank = Rank8
isRightRank = rank == expectedRank
return isRightRank

@@@@@@

# computer king constraints

-- computer king must be on its fifth's rank
if playerHasWhite then expectedRank = Rank4 else expectedRank = Rank5
isRightRank = rank == expectedRank
return isRightRank

@@@@@@

# kings mutual constraints

-- kings must be close in terms of columns
distanceBetweenKings = playerKingFile - computerKingFile
if distanceBetweenKings > 0 then absDistanceBetweenKings = distanceBetweenKings else absDistanceBetweenKings = -distanceBetweenKings
kingsAreOnNeighboursColumns = absDistanceBetweenKings <= 1

return kingsAreOnNeighboursColumns

@@@@@@

# other pieces counts

computer pawn : 1

@@@@@@

# other pieces global constraints

[computer pawn]

isRightRank = rank == computerKingRank
isRightFile = file == playerKingFile

return isRightFile and isRightRank

@@@@@@

# goal

draw