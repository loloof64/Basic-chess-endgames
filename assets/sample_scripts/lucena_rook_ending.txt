# player king constraints

isOnRightFile = (file >= FileB) and (file <= FileG)

if playerHasWhite then expectedRank = Rank8 else expectedRank = Rank1 end
isOnRightRank = rank == expectedRank

return isOnRightFile and isOnRightRank

@@@@@@

# computer king constraints

if playerHasWhite then computerSecondRank = Rank7 else computerSecondRank = Rank2 end
kingOnComputerSecondRank = rank == computerSecondRank
return kingOnComputerSecondRank

@@@@@@

# kings mutual constraints

if (playerKingFile <= FileD) then expectedComputerKingFile = playerKingFile + 2 else expectedComputerKingFile = computerKingFile - 2 end
kingOnLongSide = computerKingFile == expectedComputerKingFile
return kingOnLongSide

@@@@@@

# other pieces counts

player pawn : 1
player rook : 1
computer rook : 1

@@@@@@

# other pieces global constraints

[player pawn]

if playerHasWhite then expectedRank = Rank7 else expectedRank = Rank2 end
return (file == playerKingFile) and (rank == expectedRank)

---

[player rook]

if (playerKingFile <= FileD) then expectedFile = (playerKingFile + 1) else expectedFile = (playerKingFile - 1) end
isRightFile = file == expectedFile

if (playerHasWhite) then expectedRank = Rank1 else expectedRank = Rank8 end
isRightRank = rank == expectedRank


return isRightFile and isRightRank

---

[computer rook]

if (playerKingFile <= FileD) then isOnShortSide = (file < playerKingFile) else isOnShortSide = (file > playerKingFile) end
if playerHasWhite then isOnComputerSeventhRank = (rank == Rank2) else isOnComputerSeventhRank = (rank == Rank7) end

return isOnShortSide and isOnComputerSeventhRank

@@@@@@

# goal

win